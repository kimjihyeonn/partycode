es6
symbol
iterator
promise 비동기
async await 비동기
통신

자바스크립트 Deep Dive
블록스코프-블락에 의해 생기는 변수의 유효범위  블락=중괄호=객체,범위  let,const
함수스코프:함수에 의해서 생기는 범위, 변수의 유효범위 생존범위  var


//if문. for문,while문

문
=>문 자체가 하나의 block-scope
식=값


호이스팅  = 변수와 함수의 유효범위 영역내 젤 위로 끌어올려줌 
temporal dead zone (임시사각지대)-변수를 초기화하기 전에 사용하면안되는 영역
let은 호이스팅 할때  변수를 초기화안해줌 
var는 호이스팅 할떄 변수를 초기화 undefined

this 는 어떻게 호출됐느냐에 따라 달라짐
함수로 호출됐을때 window
객체로 호출됏을때 this
메소드 ->객체(this)


얕은 복사 : 객체의 프로퍼티들을 복사(depth 1단계까지만)

깊은복사 : 객체의 프로퍼티들을 복사 (모든 depth에 대해서)
1) 프로퍼티들을 복사한다.
2)참조형이잇으면 1번 반복.

Object.assign({},a);


var 함수스코프  호이스팅 초기화->undefined

let 블록스코프          tdz
const 블록스코프  tdz


function scope
블록 스코프

식,값

문 => return이 없는것  변수에 못담음

this 어떻게 호출됐느냐에따라 달라짐
call,apply <- 
{
let 선언
}

불변객체

object.freez
 

var a선언 시 전역변수 , window 속성


default 파라미터

싱글스레드의 콜백
논 블록킹 비동기 동적 언어

자바스크립트 런타임
V8  프로젝트 클로닝 코드베이스-> setTimeout DOM HTTP 요청을 관리하는

v8 런타임

싱글스레드 1개의 콜스택

비동기 어떤 코드를 실행하면 결국 콜백을 받고 이걸 나중에 실행한다.
setTimeout 5000
5초후에 실행됨


자바스크립트 런타임은 한번에 하나만
브라우저가 Web API 제공->자바스크립트에서 호출할 수 있는 스레드를 효과적으로 지원

이벤트 루프 -> 스택이 비어있으면 큐의 첫번쨰 콜백을 스택에 쌓아 효과적으로 실행할 수 있게 해준다.

브라우저 

V8 런타임 자바스크립트 런타임,  브라우저 웹API(DOM,AJAX,timeout,eventloop 콜백큐)
자바스크립트 싱글 쓰레드런타임 1콜스택

tc39 에크마스크립트 위원회 자바스크립트


자바스크립트
함수기능
생성자로서 기능
메모리에 function a-> prototype <- 공통메소드
인스턴스               ->(__proto__)



계산된 프로


1.prototype 프로퍼티x ->생성자함수x

method 메소드로만
arrow 함수로만 


this 화살표함수 바인딩 안함
this call apply  명시적 바인딩

strict->함수선언문이 블록스코프에 갇힌다.
  sloppymode