/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2021-10-29 23:11:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.users;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class usersignUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <title>회원가입ccc</title>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\"  href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/login.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<style>\r\n");
      out.write("\t\t.wrap-login100 {padding: 100px 50px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.login100-form {margin: 0 auto;}\r\n");
      out.write("\t\t.input100{width: 100%;}\r\n");
      out.write("\r\n");
      out.write("\t\t.join-form {display: block;}\r\n");
      out.write("\t</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"limiter\">\r\n");
      out.write("\t\t<div class=\"container-login100\">\r\n");
      out.write("\t\t\t<div class=\"wrap-login100 join-form\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<form action=\"signUp\" name=\"joinForm\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\"><!--사용자클래스선언-->\r\n");
      out.write("\t\t\t\t\t\t<label for=\"id\">아이디</label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group\"><!--input2탭의 input-addon을 가져온다 -->\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"id\" id=\"userId\" placeholder=\"아이디(영문포함 4~12자 이상)\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group-addon\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"userIDcheck\">아이디중복체크</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<span id=\"msgId\"></span><!--자바스크립트에서 추가-->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\"><!--기본 폼그룹을 가져온다-->\r\n");
      out.write("\t\t\t\t\t\t<label for=\"password\">비밀번호</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" name=\"pw\" id=\"userPw\" placeholder=\"비밀번호 (영 대/소문자, 숫자 조합 8~16자 이상)\">\r\n");
      out.write("\t\t\t\t\t\t<span id=\"msgPw\"></span><!--자바스크립트에서 추가-->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"password-confrim\">비밀번호 확인</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" name=\"pwConfirm\" id=\"pwConfirm\" placeholder=\"비밀번호를 확인해주세요.\">\r\n");
      out.write("\t\t\t\t\t\t <span id=\"msgPw-c\"></span><!--자바스크립트에서 추가-->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"name\">이름</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"uname\" id=\"userName\" placeholder=\"이름을 입력하세요.\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!--input2탭의 input-addon을 가져온다 -->\r\n");
      out.write("\t\t\t\t   <!--  <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"hp\">휴대폰번호</label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t<select class=\"form-control phone1\" id=\"userPhone1\">\r\n");
      out.write("\t\t\t\t<option>010</option>\r\n");
      out.write("\t\t\t\t<option>011</option>\r\n");
      out.write("\t\t\t\t<option>017</option>\r\n");
      out.write("\t\t\t\t<option>018</option>\r\n");
      out.write("\t\t\t</select> \r\n");
      out.write("\t\t\t<input type=\"text\" class=\"form-control phone2\" id=\"userPhone2\" placeholder=\"휴대폰번호를 입력하세요.\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group-addon\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\">본인인증</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div> -->\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group email-form\">\r\n");
      out.write("\t\t\t\t\t<label for=\"email\">이메일</label><br>\r\n");
      out.write("\t\t\t\t\t  <input type=\"text\" class=\"form-control\" name=\"email1\" id=\"userEmail1\" placeholder=\"이메일\">\r\n");
      out.write("\t\t\t\t\t  <select class=\"form-control\" name=\"email2\" id=\"userEmail2\">\r\n");
      out.write("\t\t\t\t\t\t<option>@naver.com</option>\r\n");
      out.write("\t\t\t\t\t\t<option>@daum.net</option>\r\n");
      out.write("\t\t\t\t\t\t<option>@gmail.com</option>\r\n");
      out.write("\t\t\t\t\t\t<option>@hanmail.com</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"name\">전화번호</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"tellnum\" id=\"userName\" placeholder=\"번호를 입력하세요.\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!--readonly 속성 추가시 자동으로 블락-->\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"addr-num\">주소</label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"addrZipNum\" name=\"addrZipNum\" placeholder=\"우편번호\" readonly>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group-addon\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onClick=\"goPopup()\">주소찾기</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"addrBasic\" name=\"addrBasic\" placeholder=\"기본주소\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"addrDetail\" name=\"addrDetail\" placeholder=\"상세주소\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!--button탭에 들어가서 버튼종류를 확인한다-->\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-lg btn-success btn-block\" id=\"joinBtn\">회원가입</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-info btn-block\" onclick=\"location.href='userLogin'\">로그인</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<!--===============================================================================================-->\t\r\n");
      out.write("\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/vendor/jquery/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("<!--===============================================================================================-->\r\n");
      out.write("\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/vendor/bootstrap/js/popper.js\"></script>\r\n");
      out.write("\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/vendor/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("<!--===============================================================================================-->\r\n");
      out.write("\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/vendor/select2/select2.min.js\"></script>\r\n");
      out.write("<!--===============================================================================================-->\r\n");
      out.write("\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/vendor/tilt/tilt.jquery.min.js\"></script>\r\n");
      out.write("\t<script >\r\n");
      out.write("\t\t$('.js-tilt').tilt({\r\n");
      out.write("\t\t\tscale: 1.1\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("<!--===============================================================================================-->\r\n");
      out.write("\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/js/main.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("        /*아이디 형식 검사 스크립트*/\r\n");
      out.write("        var id = document.getElementById(\"userId\");\r\n");
      out.write("        id.onkeyup = function() {\r\n");
      out.write("            /*자바스크립트의 정규표현식 입니다*/\r\n");
      out.write("            /*test메서드를 통해 비교하며, 매칭되면 true, 아니면 false반*/\r\n");
      out.write("            var regex = /^[A-Za-z0-9+]{4,12}$/; \r\n");
      out.write("            if(regex.test(document.getElementById(\"userId\").value )) {\r\n");
      out.write("                document.getElementById(\"userId\").style.borderColor = \"green\";\r\n");
      out.write("                document.getElementById(\"msgId\").innerHTML = \"아이디중복체크는 필수 입니다\";\r\n");
      out.write("\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"userId\").style.borderColor = \"red\";\r\n");
      out.write("                document.getElementById(\"msgId\").innerHTML = \"\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        /*비밀번호 형식 검사 스크립트*/\r\n");
      out.write("        var pw = document.getElementById(\"userPw\");\r\n");
      out.write("        pw.onkeyup = function(){\r\n");
      out.write("            var regex = /^[A-Za-z0-9+]{8,16}$/;\r\n");
      out.write("             if(regex.test(document.getElementById(\"userPw\").value )) {\r\n");
      out.write("                document.getElementById(\"userPw\").style.borderColor = \"green\";\r\n");
      out.write("                document.getElementById(\"msgPw\").innerHTML = \"사용가능합니다\";\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"userPw\").style.borderColor = \"red\";\r\n");
      out.write("                document.getElementById(\"msgPw\").innerHTML = \"\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        /*비밀번호 확인검사*/\r\n");
      out.write("        var pwConfirm = document.getElementById(\"pwConfirm\");\r\n");
      out.write("        pwConfirm.onkeyup = function() {\r\n");
      out.write("            var regex = /^[A-Za-z0-9+]{8,16}$/;\r\n");
      out.write("            if(document.getElementById(\"pwConfirm\").value == document.getElementById(\"userPw\").value ) {\r\n");
      out.write("                document.getElementById(\"pwConfirm\").style.borderColor = \"green\";\r\n");
      out.write("                document.getElementById(\"msgPw-c\").innerHTML = \"비밀번호가 일치합니다\";\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"pwConfirm\").style.borderColor = \"red\";\r\n");
      out.write("                document.getElementById(\"msgPw-c\").innerHTML = \"비밀번호 확인란을 확인하세요\";\r\n");
      out.write("            }\r\n");
      out.write("        }        \r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("    //팝업창 띄우기\r\n");
      out.write("    function goPopup(){\r\n");
      out.write("\t// 주소검색을 수행할 팝업 페이지를 호출합니다.\r\n");
      out.write("\t// 호출된 페이지(jusopopup.jsp)에서 실제 주소검색URL(https://www.juso.go.kr/addrlink/addrLinkUrl.do)를 호출하게 됩니다.\r\n");
      out.write("\t\r\n");
      out.write("\tvar pop = window.open(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/popup/jusoPopup.jsp\",\"pop\",\"width=570,height=420, scrollbars=yes, resizable=yes\"); \r\n");
      out.write("\t\r\n");
      out.write("\t// 모바일 웹인 경우, 호출된 페이지(jusopopup.jsp)에서 실제 주소검색URL(https://www.juso.go.kr/addrlink/addrMobileLinkUrl.do)를 호출하게 됩니다.\r\n");
      out.write("    //var pop = window.open(\"/popup/jusoPopup.jsp\",\"pop\",\"scrollbars=yes, resizable=yes\"); \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("    function jusoCallBack(roadFullAddr,roadAddrPart1,addrDetail,roadAddrPart2,engAddr, jibunAddr, zipNo, admCd, rnMgtSn, bdMgtSn,detBdNmList,bdNm,bdKdcd,siNm,sggNm,emdNm,liNm,rn,udrtYn,buldMnnm,buldSlno,mtYn,lnbrMnnm,lnbrSlno,emdNo){\r\n");
      out.write("      console.log(roadAddrPart1,addrDetail,zipNo);\r\n");
      out.write("      document.joinForm.addrZipNum.value = zipNo;\r\n");
      out.write("      document.joinForm.addrBasic.value = roadAddrPart1;\r\n");
      out.write("      document.joinForm.addrDetail.value = addrDetail;\r\n");
      out.write("      \r\n");
      out.write("    }\r\n");
      out.write("    \t\r\n");
      out.write("    \t</script>\r\n");
      out.write("    \t\r\n");
      out.write("    \t<!-- contentType 보내는츠그이 데이터타입    dataType 받는측의 데이터타입  JSON.stringify() ,JSON.parse()\r\n");
      out.write("    \t\r\n");
      out.write("    \tparce -> 'key,value' 묶여잇어야-->\r\n");
      out.write("    \t<!-- 마임타입 공부! -->\r\n");
      out.write("    \t<script>\r\n");
      out.write("    \t\r\n");
      out.write("    \t$(\"#userIDcheck\").click(function(){\r\n");
      out.write("    \t\tvar userId =$(\"#userId\").val();\r\n");
      out.write("    \t\tif(userId.length <4){//값의 길이\r\n");
      out.write("    \t\t\talert(\"아이디는 4글자 이상이여야합니다.\")\r\n");
      out.write("    \t\t  return;\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t  $.ajax({\r\n");
      out.write("    \t\t  type:\"post\", // 보내는방식\r\n");
      out.write("    \t\t  url: \"idCheck\",//보내는주소\r\n");
      out.write("    \t\t  contentType:\"application/json; charset=UTF-8\",//보내는 데이터의 형식\r\n");
      out.write("    \t\t  data : JSON.stringify({\"id\":userId/* ,\"name\":\"이순신\" */ }),\r\n");
      out.write("    \t\t  success :function(data){\r\n");
      out.write("    \t\t\t  if(data==0){\r\n");
      out.write("    \t\t\t\t  //중복없음\r\n");
      out.write("    \t\t\t\t  $(\"#userId\").attr(\"readonly\",true);\r\n");
      out.write("    \t\t\t\t  $(\"#msgId\").html(\"사용가능한 아이디입니다.\")\r\n");
      out.write("    \t\t\t\t  \r\n");
      out.write("    \t\t\t  }else{\r\n");
      out.write("    \t\t\t\t  $(\"#msgId\").html(\"중복된 아이디입니다.\")\r\n");
      out.write("    \t\t\t\t  \r\n");
      out.write("    \t\t\t  }\r\n");
      out.write("    \t\t  },\r\n");
      out.write("    \t\t  error : function(){\r\n");
      out.write("    \t\t\t  alert(\"서버측 에러가 발생했습니다.\");\r\n");
      out.write("    \t\t  }\r\n");
      out.write("    \t\t \r\n");
      out.write("    \t\t  \r\n");
      out.write("    \t  });\r\n");
      out.write("    \t});\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("    \t</script>\r\n");
      out.write("    \t\r\n");
      out.write("    \t<script>\r\n");
      out.write("    \t//\r\n");
      out.write("    \t$(\"#joinBtn\").click(function(){\r\n");
      out.write("    \t\t//아이디 중복체크, 비밀번호 필수\r\n");
      out.write("    \t\tif(!$(\"#userId\").attr(\"readonly\")){\r\n");
      out.write("    \t\t\talert(\"아이디중복체크는 필수 입니다.\")\r\n");
      out.write("    \t\t\treturn;\r\n");
      out.write("    \t\t}else if($(\"#userPw\").val()==''){\r\n");
      out.write("    \t\t\talert(\"비밀번호는 필수 입니다.\")\r\n");
      out.write("    \t\t\treturn;\r\n");
      out.write("    \t\t}else if($(\"#userName\").val().length<2)\r\n");
      out.write("    \t\t{  alert(\"이름은 2글자 이상입니다.\")\r\n");
      out.write("    \t\t\treturn;\r\n");
      out.write("    \t\t}else{\r\n");
      out.write("    \t\t\tdocument.joinForm.submit(); //form의 액션값 signUp\r\n");
      out.write("    \t\t} \t\t\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t});\r\n");
      out.write("    \t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
